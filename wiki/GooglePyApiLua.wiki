
== 导航 ==

    * [http://www.google.com/ime/pinyin/ 官方下载] —— [http://www.google.com/ime/pinyin/api.html 官方指南]
    * [http://code.google.com/p/footearthtest/wiki/GooglePyApiLua#API_指南 API 指南]
    * [http://code.google.com/p/google-pinyin-api/ 谷歌拼音众包项目]
    * [http://code.google.com/p/footearthtest/wiki/GooglePyApiLua#自用脚本 自用脚本]

== API 指南 ==

默认扩展 base.lua 所在目录：

XP: 

{{{C:\Documents and Settings\All Users\Application Data\Google\Google Pinyin 2\Extensions\base.lua}}}

Vista / Windows 7: 

{{{C:\ProgramData\Google\Google Pinyin 2\Extensions\base.lua}}}


=== 注册命令扩展 ===

　　*命令扩展*是将脚本程序中的某个入口函数关联到一个两字母长的自定义命令。当用户先键入 i 然后键入该命令时，输入法即激活该扩展函数，然后在候选项列表中显示扩展函数返回的候选项结果。命令扩展适用于那些用户明确希望在特定场景下使用特定输入功能，且候选项较多，较复杂的情况。例如，用户明确希望根据生日查询并输入星座信息等。

{{{ime.register_command(command_name, lua_function_name, description, leading, help)}}}

    * command_name
        * *2字符长*的字符串，必须由两个英文字母（a-z）组成。定义了要注册的命令名字。如果新注册的命令名称和此前已经注册的某个命令重名（判断重名时不区分大小写），则register_command函数调用失败，新命令扩展无法注册到输入法中。
    * lua_function_name
        * 字符串。给出此命令在i扩展模式中运行时对应的Lua入口函数。这必须是一个已经存在的，接收一个或零个参数的Lua函数。
    * description
        * 字符串。命令的简短描述。此描述会显示在i扩展模式的命令选择界面中，向用户简要说明某命令的功能。不要使用太长的简短描述，一般不要超过10个字符。
    * leading[可省略]
        * 字符串。用户选择此命令的候选项目时，可以使用的快捷键，可以是以下三个特定字符串之一：
            * "digit": 默认值。表示用1, 2, 3, ...这样的数字作为候选项选择键。
            * "alpha": 表示用a, b, c, ...这样的英文字母序列作为候选项选择键。
            * "none": 表示不使用候选项选择键。
        * 注：默认情况下，输入法使用1, 2, 3, ...数字键作为候选项选择键。但是，当i扩展模式的某个命令希望接收数字1, 2, 3, ...作为自己的参数时，为避免冲突，就不能使用"digit"方式的候选项选择键了。同理，当命令希望接收包含英文字母的参数时，就不能使用"alpha"作为候选项选择键。
    * help[可省略]
        * 字符串。比description略长的帮助信息，但一般不要超过50个字。当用户键入了"i"以及特定的命令名后，输入法候选窗口的右上方会显示此文字信息，用于提示用户如何输入后续参数。

Helloworld：

{{{
function HelloWorld()
    retuan "Hello,World!"
end

ime.register_command("hw", "HelloWorld", "test")
}}}

=== 注册整合扩展 ===

　　*整合扩展*是将脚本程序中的某个入口函数关联到特定的键盘输入串，或特定的中英文候选项。当用户使用拼音输入法时，一旦用户通过键盘输入的字符串与整合扩展关联的特定字符串（可包含通配符）匹配，或拼音输入法解析出的某个候选项与整合扩展关联的特定字符串（可包含通配符）匹配，输入法即激活该扩展函数，并将扩展函数返回的候选项结果插入到候选项列表中。整合扩展适用于那些在不妨碍用户正常输入的情况下，根据当前输入或候选内容，插入少数相关候选项的情况。例如，用户在输入中文“时间”的同时，也可能希望直接输入当前时间，这时，整合扩展直接把扩展函数返回的当前时间整合至候选项列表中，就显得比较方便了。

{{{ime.register_trigger(lua_function_name, description, input_trigger_strings, candidate_trigger_strings)}}}

    * lua_function_name
    * description
    * input_trigger_strings
    * candidate_trigger_strings

Helloworld：

{{{
function HelloWorld()
    retuan "Hello,World!"
end

ime.register_trigger("HelloWorld", "test", { "hello" }, {})
}}}

=== 开发和调试 ===

== 自用脚本 ==

    * 转换大小写中文数字
    * 打印数学符号
    * 带参数打印 LaTeX 公式
