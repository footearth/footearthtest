<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="zh-CN" xml:lang="zh-CN">
<head>
<title>命令参考大全，卷 2，d - h - fdpr 命令</title>
<meta http-equiv="Content-Type" content="text/html; charset=gb2312" />
<meta name="dc.date" scheme="iso8601" content="2004-07-21" />
<meta name="copyright" content="(C) IBM公司版权 1997,  2004" />
<meta name="security" content="public" />
<meta name="dc.language" scheme="rfc1766" content="zh-cn" />
<meta name="Robots" content="index,follow"/>
<meta http-equiv="PICS-Label" content='(PICS-1.1 "http://www.icra.org/ratingsv02.html" l gen true r (cz 1 lz 1 nz 1 oz 1 vz 1) "http://www.rsac.org/ratingsv01.html" l gen true r (n 0 s 0 v 0 l 0) "http://www.classify.org/safesurf/" l gen true r (SS~~000 1))' />
<meta name="owner" content="ctscrcf@cn.ibm.com" />
<link rel="stylesheet" type="text/css" href="ibmidwb.css" />
<link rel="stylesheet" type="text/css" href="text.css" />
</head>
<body>
<a id="Top_Of_Page" name="Top_Of_Page"></a> <P><center>
<B>[ <a href="fdpr.htm#Bot_Of_Page">页的底部</a> | <a href="fdformat.htm">上一页</a> | <a href="fencevsd.htm">下一页</a> | <a href="mastertoc.htm#mtoc">目录</a> | <a href="aixcmds202.htm#wq1815">索引</a> |  <A HREF="file:///C|/download/www16.boulder.ibm.com/cgi-bin/ds_form@lang=zh_CN&viewset=AIX" TARGET="_top"><B>Library Home</B></A> |
<A HREF="notices.htm"><B>Legal</B></A> |
<A HREF="file:///C|/download/www16.boulder.ibm.com/cgi-bin/ds_form@lang=zh_CN&viewset=AIX" TARGET="_top"><B>Search</B></A> ]</B>
</center>
<center><h1>命令参考大全，卷 2，d - h</h1></center>

<a name="def54c8931jani"></a>
<h2 id="def54c8931jani">fdpr 命令</h2>
<a name="def54c8965jani"></a>
<h3 id="def54c8965jani">用途</h3>
<a name="e761c1a022mela"></a>
<p id="e761c1a022mela">改善用户级后期连接应用程序的执行时间和实际内存使用率的性能调整实用程序。</p>
<a name="def54c9036jani"></a>
<h3 id="def54c9036jani">语法</h3>
<a name="def54c9116jani"></a>
<h4 id="def54c9116jani">常规用法：</h4>
<a name="e761c1a286mela"></a>
<p id="e761c1a286mela"><span class="bold">fdpr</span>   <a href="fdpr.htm#def54cb504jani"><span class="bold">-p</span> <span class="italic">ProgramFile</span></a> <a href="fdpr.htm#fdpr_flags_x"><span class="bold">-x</span></a> <span class="italic">WrokLoadCommand</span></p>
<a name="def54c9731jani"></a>
<h4 id="def54c9731jani">详细用法：</h4>
<p><span class="bold">fdpr</span>   <a href="fdpr.htm#def54cb504jani"><span class="bold">-p</span> <span class="italic">ProgramFile</span></a> [ <a href="fdpr.htm#def54cb146jani"><span class="bold">-M</span> <span class="italic">Segnum</span></a> ] [ <a href="fdpr.htm#def54cb273janfd"><span class="bold">-fd</span></a> <span class="italic">Fdesc</span> ] [  <a href="fdpr.htm#def54cb371jani"><span class="bold">-o</span> <span class="italic">OutputFile</span></a> ] [ <a href="fdpr.htm#arflag"><span class="bold">-armember</span> <span class="italic">ArchiveMemberList</span></a> ]
 [ OptimizationFlags ] [ <a href="fdpr.htm#mapflag"><span class="bold">-map</span></a> ]
[ <a href="fdpr.htm#disasmflag"><span class="bold">-disasm</span></a> ] <span> [ <a href="fdpr.htm#fdpr_flagsdisasm_data"><span class="bold">-disasm_data</span></a>]
[ <a href="fdpr.htm#fdpr_flagsdisasm_bss"><span class="bold">-disasm_bss</span></a>] </span>[ <a href="fdpr.htm#profflag"><span class="bold">-profcount</span></a> ] <span>[ <a href="fdpr.htm#fdpr_flagsquiet"><span class="bold">-quiet</span></a>] </span> [ <a href="fdpr.htm#def54cc144jani"><span class="bold">-v</span></a> ]  [ <span class="bold">-1 | -2</span> |  <span class="bold">-3 | -12</span> | <span class="bold">-23 | -123</span>] [ <a href="fdpr.htm#fdpr_flags_x"><span class="bold">-x</span> <span class="italic">WorkloadCommand</span></a> ]</p>
<a name="wq1112"></a>
<h4 id="wq1112">优化标志</h4>
<p>[ <a href="fdpr.htm#tbflag"><span class="bold">-tb</span></a> ] [ <a href="fdpr.htm#pcflag"><span class="bold">-pc</span></a> ] [ <a href="fdpr.htm#ppflag"><span class="bold">-pp</span></a> ] <span>[ <a href="fdpr.htm#fdpr_flagsbigo"><span class="bold">-O</span></a> ]</span>[ <a href="fdpr.htm#o2flag"><span class="bold">-O2</span></a> ] [ <a href="fdpr.htm#o3flag"><span class="bold">-O3</span></a> ] <span>[ <a href="fdpr.htm#fdpr_flagso4"><span class="bold">-O4</span></a> ] [ <a href="fdpr.htm#fdpr_flagsselective_inline"><span class="bold">-selective_inline</span></a>] \
[ <a href="fdpr.htm#fdpr_flagssid_fac"><span class="bold">-sid_fac</span> <span class="italic">percent</span></a>] [ <a href="fdpr.htm#fdpr_flagsinline_small_func"><span class="bold">-inline_small_funcs</span> <span class="italic">size</span></a>] [ <a href="fdpr.htm#fdpr_flagsinline_hot_func"><span class="bold">-inline_hot_funcs</span> <span class="italic">percent</span></a>] [ <a href="fdpr.htm#fdpr_flagshco_resched"><span class="bold">-hco_resched</span></a>]</span> [ <a href="fdpr.htm#killed_regs_flag"><span class="bold">-killed_regs</span></a> ] \
<span>[ <a href="fdpr.htm#fdpr_flagslr_opt"><span class="bold">-lr_opt</span></a>] [ <a href="fdpr.htm#fdpr_flagsalign"><span class="bold">-align</span> <span class="italic">bytes</span></a></span>] [ <a href="fdpr.htm#rdflag"><span class="bold">-RD</span></a> ] <span>[ <a href="fdpr.htm#fdpr_flagsdpnf"><span class="bold">-dpnf</span> <span class="italic">factor</span></a>] [ <a href="fdpr.htm#fdpr_flagsdpht"><span class="bold">-dpht</span> <span class="italic">threshold</span></a>] [ <a href="fdpr.htm#fdpr_flagsbuild_dcg"><span class="bold">-build_dcg</span></a>]</span> \
[ <a href="fdpr.htm#tocloadflag"><span class="bold">-tocload</span></a> ] [<a href="fdpr.htm#ptrgl_optflag"><span class="bold">-ptrgl_opt</span></a> ] <span>[ <a href="fdpr.htm#fdpr_flagsno_ptrgl_r11"><span class="bold">-no_ptrgl_r11</span></a>]</span> [ <a href="fdpr.htm#dcbt_optflag"><span class="bold">-dcbt_opt</span></a> ] <span>[ <a href="fdpr.htm#fdpr_flagsignore_info"><span class="bold">-ignore_info</span></a>] [ <a href="fdpr.htm#fdpr_flagsdead_code_removal"><span class="bold">-dead_code_removal</span></a>] \
[ <a href="fdpr.htm#fdpr_flagsbt_csect_anchor_removal"><span class="bold">-bt_csect_anchor_removal</span></a>] [<a href="fdpr.htm#fdpr_flagsstrip"><span class="bold"> -strip</span></a>] [<a href="fdpr.htm#fdpr_flagsanalyse_asm_csects"><span class="bold">-analyse_asm_csects</span></a>] [<a href="fdpr.htm#fdpr_flagsextra_safe_analysis"><span class="bold">-extra_safe_analysis</span></a>] [<a href="fdpr.htm#inline_flag"><span class="bold">-inline</span></a>] [<a href="fdpr.htm#fdpr_flagsreduce_toc"><span class="bold">-reduce_toc</span> <span class="italic">removal_factor</span></a>]</span></p>
<a name="def54ca011jani"></a>
<h3 id="def54ca011jani">描述</h3>
<p><span class="bold">fdpr</span> 命令（反馈定向程序重构）是可以帮助改善用户级应用程序执行时间和内存实际使用率的性能调整程序。<span class="bold">fdpr</span> 程序通过收集程序在某些典型工作负荷下运行时的行为信息来优化某个程序的可执行映像，然后创建一个针对此工作负荷而优化的新版本的程序。通常，<span class="bold">fdpr</span> 所生成的新程序可以运行得更快并且实际内存使用得更少。</p>
<div class="attention"><span class="attentiontitle">注意: </span><span class="bold">fdpr</span> 命令为程序应用了高级优化技术，可能会产生行为与预期不相符的程序；使用这种工具优化过的程序应当小心使用，同时应该进行严格的再次测试，至少应该使用测试原始程序的同一测试套件来验证期望的功能。不支持优化过的程序。</div>
<p><span class="bold">fdpr</span> 命令在 3 个不同的阶段构建优化的可执行程序：</p>
<ul>
<li>阶段 1<span>（<span class="bold">-1</span> flag）</span>：创建已检测的可执行程序和空模板概要文件。</li>
<li>阶段 2<span>（<span class="bold">-2</span> flag）</span>：运行已检测的程序并更新概要文件数据。</li>
<li>阶段 3<span>（<span class="bold">-3</span> flag）</span>：生成已优化的可执行程序文件。</li></ul>
<p>这些阶段可以单独运行，也可以部分或者完全结合在一起来运行，但是必须按照顺序运行（即，<span class="bold">-1</span>然后<span class="bold"> -2</span>，然后<span class="bold"> -3</span>，或者<span class="bold"> -12</span>，然后再 <span class="bold"> -3</span>）。缺省值是运行全部三个阶段。</p>
<a name="wq1113"></a>
<div class="notetitle" id="wq1113">注:</div>
<div class="notebody">在阶段 1 创建并且在阶段 2 运行的经过检测的可执行程序一般比原始程序运行速度慢好几倍。因为经过检测的程序在执行时间上的增长，可执行程序应该这样调用以最小化执行时间，同时在希望的代码区内仍然完全执行。<span class="bold">fdpr</span> 命令的用户应该在可行的情况下试图消除一切程序时间依赖的特性。</div>
<a name="def54ca959jani"></a>
<h3 id="def54ca959jani">标志</h3>
<p></p>
<a name="wq1114"></a>
<table id="wq1114" width="100%" summary="" border="0" frame="void" rules="none">
<tbody valign="top">
<tr>
<td width="20%">
<a id="def54cb067jani" name="def54cb067jani"></a><span class="bold">-1</span><span class="bold">-2</span>
 <span class="bold">-3</span></td>
<td width="79%">指定要运行的阶段。缺省值是全部 3 个阶段（<span class="bold">-123</span>）。 必须按顺序运行各个阶段（例如，先是 <span class="bold">-1</span>，然后是 <span class="bold">-2</span>，接下来是 <span class="bold">-3</span>，或者先是 <span class="bold">-1</span>，然后是 <span class="bold">-23</span>）。<span class="bold">-2</span> 标志必须与调用标志 <span class="bold">-x</span> 一起使用。</td>
</tr>
<tr>
<td>
<a id="def54cb146jani" name="def54cb146jani"></a><span class="bold">-M </span><span class="italic">SegNum</span></td>
<td>指定为概要分析映射共享内存的位置。缺省值是 <span class="bold"> 0x30000000 </span>。如果需要优化的程序或者任何用 <span class="bold">-x</span> 标志调用的工作负荷命令字符串使用冲突的共享内存地址，则要指定一个备用的共享内存地址。典型的可选值是<span class="bold"> 0x40000000</span>，<span class="bold"> 0x50000000 </span>... 直到<span class="bold"> 0xC0000000</span>）。</td>
</tr>
<tr>
<td>
<a id="def54cb273janfd" name="def54cb273janfd"></a><span class="bold">-fd</span> <span class="italic">Fdesc</span></td>
<td>指定为<span class="bold">概要文件</span>使用哪个文件描述符数字，概要文件会被映射到以上的共享内存区。Fdesc 的缺省值<span class="italic"></span>设置为 1999。</td>
</tr>
<tr>
<td>
<a id="def54cb371jani" name="def54cb371jani"></a><span class="bold">-o</span><span class="italic">  OutFile</span></td>
<td>从优化器中指定输出文件的名称。缺省值是<span class="italic"> program</span><span class="bold">.fdpr</span></td>
</tr>
<tr>
<td>
<a id="def54cb504jani" name="def54cb504jani"></a><span class="bold">-p</span><span class="italic"> ProgramFile</span></td>
<td>包含要优化的可执行程序文件或者共享对象文件的名称，或者包含共享对象 / 可执行(文件)的共享库名称。这个程序必须是一个完整的可执行程序。</td>
</tr>
<tr>
<td>
<a id="arflag" name="arflag"></a><span class="bold">-armember</span><span class="italic"> ArchiveMemberList</span></td>
<td>要优化的压缩文档成员列表，位于 <span class="bold">-p</span> 标志指定的共享压缩文件中。<span class="bold"></span>如果 <span class="bold">-armember</span> 没有指定，压缩文档文件的所有成员都会被优化。</td>
</tr>
<tr>
<td>
<a id="mapflag" name="mapflag"></a><span class="bold">-map</span></td>
<td><span>将带各自的原有 -> 新地址的基本块和静态变量的映射打印为后缀为 <span class="bold">.mapper</span> 的文件。</span></td>
</tr>
<tr>
<td>
<a id="disasmflag" name="disasmflag"></a><span class="bold">-disasm</span></td>
<td><span>将输出的已优化且检测过的程序的反汇编的文本部分打印为后缀为 <span class="bold">.dis_text</span> 的文件。</span></td>
</tr>
<tr>
<td>
<a id="fdpr_flagsdisasm_data" name="fdpr_flagsdisasm_data"></a><span class="bold">-disasm_data</span></td>
<td>将输出的已优化且检测过的程序的反汇编数据部分打印为后缀为 <span class="bold">.dis_data</span> 的文件。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsdisasm_bss" name="fdpr_flagsdisasm_bss"></a><span class="bold">-disasm_bss</span></td>
<td>将输出的已优化且检测过的程序的已反汇编的 bss 部分打印为后缀为 <span class="bold">.dis_bss</span> 的文件。</td>
</tr>
<tr>
<td>
<a id="profflag" name="profflag"></a><span class="bold">-profcount</span></td>
<td><span>将概要分析计数器打印为后缀为 <span class="bold">.ncounts</span> 的文件。</span></td>
</tr>
<tr>
<td>
<a id="fdpr_flagsquiet" name="fdpr_flagsquiet"></a><span class="bold">-quiet</span></td>
<td>安静输出方式。</td>
</tr>
<tr>
<td>
<a id="def54cc144jani" name="def54cc144jani"></a><span class="bold"> -v </span></td>
<td>冗长的输出。</td>
</tr>
<tr>
<td>
<a id="fdpr_flags_x" name="fdpr_flags_x"></a><span class="bold">-x</span> <span class="italic">WorkloadCommand</span></td>
<td>指定用来调用经检测的程序的命令。<span class="bold">-x</span> 标志后的所有参数都用于调用。<span class="bold">-s</span> 标志结合 <span class="bold">-2</span> 标志使用时需要使用 <span>因此，命令行最后应该存在 <span class="bold">-x</span> 标志。使用 <span class="bold">-2</span> 标志时需要使用 <span class="bold">-x</span>标志。</span></td>
</tr>
</tbody>
</table>
<a name="wq1115"></a>
<h3 id="wq1115">优化标志</h3>
<a name="wq1116"></a>
<table id="wq1116" width="100%" summary="" border="0" frame="void" rules="all">
<tbody valign="top">
<tr>
<td width="33%">
<a id="fdpr_flagsanalyse_asm_csects" name="fdpr_flagsanalyse_asm_csects"></a><span class="bold">-analyse_asm_csects</span></td>
<td width="66%">   分析以汇编语言编写的 csect（如果使用，必须同时在 -1 和 -3 阶段指定）。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsextra_safe_analysis" name="fdpr_flagsextra_safe_analysis"></a><span class="bold">-extra_safe_analysis</span></td>
<td>   请勿尝试分析包含手写汇编代码的非传统 csect（如果使用，必须同时在 -1 和 -3 阶段指定）。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsignore_info" name="fdpr_flagsignore_info"></a><span class="bold">-ignore_info</span></td>
<td>  忽略编译过程中使用 <span class="bold">-qfdpr</span> 选项生成的 <span class="bold">.info </span>部分（如果使用，必须同时在 -1 和 -3 阶段指定）。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsalign" name="fdpr_flagsalign"></a><span class="bold">-align </span><span class="italic">bytes</span></td>
<td>   排列根据给定数量的字节频繁执行的代码，以便提高代码预取缓存率。
如果忽略了此选项，<span class="bold">fdpr</span> 命令将排列可变的缺省字节数的代码。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagslr_opt" name="fdpr_flagslr_opt"></a><span class="bold">-lr_opt</span></td>
<td>   排除频繁执行的过程中链接寄存器的存储和恢复。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsbt_csect_anchor_removal" name="fdpr_flagsbt_csect_anchor_removal"></a><span class="bold">-bt_csect_anchor_removal</span></td>
<td>   排除与代码中分支表的用法相关的装入指令。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsdead_code_removal" name="fdpr_flagsdead_code_removal"></a><span class="bold">-dead_code_removal</span></td>
<td>   删除不可达代码。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsselective_inline" name="fdpr_flagsselective_inline"></a><span class="bold">-selective_inline</span></td>
<td>   为从一个单独的主要调用位置频繁调用的函数执行选择性直接插入。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagssid_fac" name="fdpr_flagssid_fac"></a><span class="bold">-sid_fac</span> <span class="italic">percent</span></td>
<td>   为选择性直接插入优化设置主要因子百分比。允许的范围为 50 - 100（仅在使用 <span class="bold">-selective_inline</span> 标志时适用）。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsinline_small_func" name="fdpr_flagsinline_small_func"></a><span class="bold">-inline_small_funcs</span> <span class="italic">size</span></td>
<td>   直接插入小于或等于以字节为单位的给定大小的所有函数。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsinline_hot_func" name="fdpr_flagsinline_hot_func"></a><span class="bold">-inline_hot_funcs</span> <span class="italic">percent</span></td>
<td>   直接插入执行频率等于或大于给定百分比的所有函数。输入百分比范围为 0 - 100。</td>
</tr>
<tr>
<td>
<a id="inline_flag" name="inline_flag"></a><span class="bold">-inline</span></td>
<td>   结合 <span class="bold">-selective_inline</span> 执行 <span class="bold">-inline_small_funcs 12</span>。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagshco_resched" name="fdpr_flagshco_resched"></a><span class="bold">-hco_resched</span></td>
<td>   如果可能，将来自频繁执行的代码的指令重新定位到很少执行的代码区域。</td>
</tr>
<tr>
<td>
<a id="dcbt_optflag" name="dcbt_optflag"></a><span class="bold">-dcbt_opt</span></td>
<td>   插入 <span class="bold">dcbt </span>指令来提高数据高速缓存的性能。</td>
</tr>
<tr>
<td>
<a id="killed_regs_flag" name="killed_regs_flag"></a><span class="bold">-killed_regs</span></td>
<td>   排除频繁执行的函数调用后<span class="italic">被杀死</span>（覆盖）的寄存器的存储和恢复。</td>
</tr>
<tr>
<td>
<a id="tbflag" name="tbflag"></a><span class="bold">-tb</span></td>
<td> 在重新排序的代码中强制重构回溯表。如果省略了 <span class="bold">-tb</span> 选项，将使用 Try &amp; Catch 机制自动为 C++ 应用程序恢复回溯表。</td>
</tr>
<tr>
<td>
<a id="pcflag" name="pcflag"></a><span class="bold">-pc</span></td>
<td><span>在重新排序后的代码中保留 csect 的边界。</span></td>
</tr>
<tr>
<td>
<a id="ppflag" name="ppflag"></a><span class="bold">-pp </span></td>
<td><span>在重新排序后的代码中保留函数的边界。</span></td>
</tr>
<tr>
<td>
<a id="rdflag" name="rdflag"></a><span class="bold">-RD</span></td>
<td>在 .</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsdpnf" name="fdpr_flagsdpnf"></a><span class="bold">-dpnf</span> <span class="italic">factor</span></td>
<td>0 - 1 之间的“数据放置规范化因子”；其中，0 将导致重新排序静态变量且不考虑其大小，而 1 将首先仅查找大小较小的变量（仅在结合 <span class="bold">-RD</span> 标志时适用）。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsdpht" name="fdpr_flagsdpht"></a><span class="bold">-dpht</span> <span class="italic">threshold</span></td>
<td>  0 - 1 之间的“数据放置热阈值”；其中，0 将根据控制流重新排序大组中的静态变量，而 1 将根据极小组中的变量的访问频率重新排序这些变量（仅在结合 <span class="bold">-RD</span> 标志使用时适用）。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsbuild_dcg" name="fdpr_flagsbuild_dcg"></a><span class="bold">-build_dcg</span></td>
<td>  为增强的数据重新排序构建 DCG（数据连接图）（仅在结合 <span class="bold">-RD</span> 标志使用时适用）。</td>
</tr>
<tr>
<td>
<a id="tocloadflag" name="tocloadflag"></a><span class="bold">-tocload</span></td>
<td> <span>执行 tocload 优化。</span></td>
</tr>
<tr>
<td>
<a id="fdpr_flagsreduce_toc" name="fdpr_flagsreduce_toc"></a><span class="bold">-reduce_toc</span> <span class="italic">removal_factor</span></td>
<td>  根据删除 0 - 1 之间的因子执行 TOC 条目，其中 0 将仅删除未访问的 TOC 条目，而 1 将删除未导出的 TOC 条目。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsstrip" name="fdpr_flagsstrip"></a><span class="bold">-strip</span></td>
<td>  剥离输出文件（如果生成了的话）。</td>
</tr>
<tr>
<td>
<a id="ptrgl_optflag" name="ptrgl_optflag"></a><span class="bold">-ptrgl_opt</span></td>
<td> 通过使用寄存器将间接调用指令替换为直接跳转来执行对对这些指令的优化。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsno_ptrgl_r11" name="fdpr_flagsno_ptrgl_r11"></a><span class="bold">-no_ptrgl_r11</span></td>
<td>  请勿执行 _ptrgl csect 中的 R11 装入指令的删除（缺省情况下将应用 <span class="bold">-ptrgl_r11</span> 优化）。</td>
</tr>
<tr>
<td>
<a id="fdpr_flagsbigo" name="fdpr_flagsbigo"></a><span class="bold">-O</span></td>
<td>  使用分支预测位设置、分支折叠和 NOOP 指令删除执行代码重新排序。
缺省情况下将应用 <span class="bold">-O</span> 标志。</td>
</tr>
<tr>
<td>
<a id="o2flag" name="o2flag"></a><span class="bold">-O2</span></td>
<td> 。<span>打开所有影响较小的优化标志。</span></td>
</tr>
<tr>
<td>
<a id="o3flag" name="o3flag"></a><span class="bold">-O3</span></td>
<td><span>打开所有有影响的优化标志。</span></td>
</tr>
<tr>
<td>
<a id="fdpr_flagso4" name="fdpr_flagso4"></a><span class="bold">-O4</span></td>
<td>  打开所有有影响的优化标志。</td>
</tr>
</tbody>
</table>
<a name="def54cc342jani"></a>
<h3 id="def54cc342jani">优化</h3>
<p><span class="bold">fdpr</span> 命令在缺省情况下执行级别最可能的代码重新排序优化，以及分支预测位设置、分支折叠、代码对齐和删除冗余的 NOOP 指令的优化。<span class="bold">-pc</span> 标志在保留 csect 的边界的同时重新排序整个代码，因此可能致使提高性能方面不如缺省的代码重新排序。
与此类似，<span class="bold">-pp</span> 标志在保留过程的边界时重新排序整个代码。</p>
<p>上面的优化标志也可以对整个可执行程序文件执行其它优化。</p>
<p>使用 <span class="bold">-qfdpr</span> IBM xl 编译器标志构建的可执行程序包含在生成重新排序程序时支持 fdpr 命令的信息。<span class="bold"></span>
没有使用 -qfdpr 选项编译的模块<span class="bold"></span> 在符号表内的编译器签名的基础上被重新排序。</p>
<a name="e761c1d386mela"></a>
<p id="e761c1d386mela">在重新排序程序时使用静态链接可能实现程序额外的性能提升。因为 <span class="bold">fdpr</span> 程序仅仅对指定的可执行程序重新排序指令，任何被程序调用的动态链接共享库例程都不会被优化。静态链接这些库例程到可执行程序，则允许优化在程序中的指令，也可以优化被程序使用的所有库例程。这些可能是构建静态链接程序的优点，也可能是缺点。请参阅<span class="italic">《AIX 5L V5.2 性能管理指南》</span>以获取进一步的信息。</p>
<a name="def54cc871jani"></a>
<h3 id="def54cc871jani">输出文件</h3>
<p>所有被 fdpr 命令创建的文件被保存在当前的目录中，例外情况是可能在 -x 标志指定的工作负荷命令中被创建的文件。<span class="bold"></span> <span class="bold"></span>
在优化过程中，原始程序通过重新命名程序来保存，只有当最后一个阶段的工作都结束时才恢复原始的程序名。</p>
<p>因为运行此程序的脚本可能在执行程序之前更改工作目录，所以 <span class="bold">fdpr</span> 命令创建的概要文件显式地使用当前目录的全名。</p>
<p>fdpr 命令创建并且 / 或者使用的文件是：<span class="bold"></span></p>
<a name="wq1117"></a>
<table id="wq1117" width="100%" summary="" border="0" frame="void" rules="none">
<tbody valign="top">
<tr>
<td width="38%">
<a id="def54cd310jani" name="def54cd310jani"></a><span class="italic">program</span></td>
<td width="61%">要优化的无条纹可执行程序的名称。</td>
</tr>
<tr>
<td>
<a id="def54cd389jani" name="def54cd389jani"></a><span class="italic">program</span><span class="bold">.save</span></td>
<td>原始可执行程序保存后的版本。</td>
</tr>
<tr>
<td>
<a id="def54cd737jani" name="def54cd737jani"></a><span class="italic">program</span><span class="bold">.nprof</span></td>
<td>概要文件的名称。</td>
</tr>
<tr>
<td>
<a id="def54cd849jani" name="def54cd849jani"></a><span class="italic">program</span><span class="bold">.instr</span></td>
<td>程序检测版本的名称。</td>
</tr>
<tr>
<td>
<a id="def54cd962jani" name="def54cd962jani"></a><span class="italic">program</span><span class="bold">.fdpr</span></td>
<td>优化可执行输出文件的缺省名称。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.instr.dis_text</span></td>
<td>检测阶段后由 <span class="bold">-disasm</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.fdpr.dis_text</span></td>
<td>优化阶段后由 <span class="bold">-disasm</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.instr.dis_data</span></td>
<td>检测阶段后由 <span class="bold">-disasm_data</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.fdpr.dis_data</span></td>
<td>优化阶段后由 <span class="bold">-disasm_data</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.instr.dis_bss</span></td>
<td>检测阶段后由 <span class="bold">-disasm_bss</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.fdpr.dis_bss</span></td>
<td>优化阶段后由 <span class="bold">-disasm_bss</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.instr.mapper</span></td>
<td>检测阶段后由 <span class="bold">-map</span> 标志生成的 ASCII 格式的缺省映射文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.fdpr.mapper</span></td>
<td>优化阶段后由 <span class="bold">-map</span> 标志生成的 ASCII 格式的缺省映射文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.ncounts</span></td>
<td>由 <span class="bold">-profcount</span> 标志生成的 ASCII 格式的缺省概要表计数器文件。</td>
</tr>
</tbody>
</table>
<a name="wq1118"></a>
<h3 id="wq1118">增强的调试能力</h3>
<p>为了使优化后的程序具备一定程度的调试能力，<span class="bold">FDPR</span> 将更新“符号表”以反映 <span class="bold">.text</span> 部分中所作的更改。</p>
<p>在重新排序 <span class="bold">FDPR</span> 的过程中指定被重新定位的符号的地址的“符号表”中的输入字段被修改为指向它们在 <span class="bold">.text</span> 部分中的新地址。</p>
<p>另外，如果在重新排序过程中分割了函数或文件，<span class="bold">FDPR</span> 将在“符号表”中为被分割的函数／文件的每个新部分创建新条目。这些相同函数的新部分根据以下命名约定来产生符号表中新的符号名：</p>
<p></p>
<pre class="xmp">&lt;original function name>__fdpr_&lt;function's part number></pre>
<p>代码重新排序之后，所有新条目将带有后缀 <tt class="xph">__fdpr_</tt> 字符串。</p>
<p> 示例：函数“main”最初在“符号表”中具有以下条目：</p>
<pre class="xmp">  [Index] m   Value       Scn     Aux   Sclass    Type    Name
   [456]  m  0x00000230    2       1     0x02    0x0000   .main
</pre>
<p>如果代码重新排序后，函数 <tt class="xph">main</tt> 被分割为 3 个部分，则它在“符号表”中将有 3 个条目；每个部分都具有一个如下条目：</p>
<pre class="xmp">  [Index] m   Value       Scn     Aux   Sclass    Type    Name
   [456]  m  0x00000304    2       1     0x02    0x0000   .main
  [1447]  m  0x00003328    2       1     0x02    0x0000   .main__fdpr_1
  [1453]  m  0x000033b4    2       1     0x02    0x0000   .main__fdpr_2
</pre>
<a name="def54ce473jani"></a>
<h3 id="def54ce473jani">示例</h3>
<p>以下的是关于 fdpr 的典型使用示例。<span class="bold"></span></p>
<ol type="1">
<li>这个例子允许用户运行所有 3 个阶段。在这个例子中，<tt>test1</tt> 是无条纹的可执行程序<tt>test2</tt> 是调用 test1 的 shell 脚本。<tt></tt>
当前的工作目录是<span class="bold"> /tmp/fdpr </span>。
<p></p>
<pre class="xmp">test2 脚本文件：

# code to exercise test1
test1 -expand 100 -root $PATH file.jpg -quit
# the end of test2</pre><p class="indatacontent"> 执行 <span class="bold">fdpr</span> 命令（使用缺省优化）：</p>
<pre class="xmp">fdpr -p test1 -x test2</pre><p class="indatacontent"> 这样导致新的重新排序的可执行程序<span class="bold"> test1.fdpr </span>。</p></li>
<li>要在任何时候运行某个阶段，请执行 <span class="bold">fdpr </span>的阶段 1。
<p></p>
<pre class="xmp">fdpr -1 -p test1</pre><p class="indatacontent"> 此命令字符串将创建一个名称为 <tt class="xph">test1.instr</tt> 的已检测版本和空模板概要文件 <tt class="xph">test1.nprof</tt>。</p>
<p>要执行阶段 2：</p>
<p></p>
<pre class="xmp">fdpr -2 -p test1 -x test2</pre><p class="indatacontent"> 这个命令字符串执行脚本文件<tt> test2 </tt>，此文件运行 test1 的检测版本来收集概要文件数据。<tt></tt></p> 
<a name="def54cf916jani"></a>
<p id="def54cf916jani">要执行阶段 3：</p> 
<p></p>
<pre class="xmp">fdpr -3 -p test1</pre><p class="indatacontent"> 这将再次导致新的重新排序的可执行文件<span class="bold"> test1.fdpr </span>。</p></li>
<li>要运行前两个阶段后再运行阶段 3，请执行阶段 1 和阶段 2。
<p></p>
<pre class="xmp">fdpr -12 -p test1 -x test2</pre><p class="indatacontent"> 使用优化级别 3 执行阶段 3。</p>
<pre class="xmp">fdpr -3 -O3 -p test1</pre></li>
<li>如果在运行使用 <span class="bold">fdpr</span> 优化过的程序时出错，可以如下方式使用 <span class="bold">dbx</span> 命令确定发生错误的是哪一个过程：
<p></p>
<pre class="xmp">dbx program.fdpr </pre><p class="indatacontent"> 产生的输出类似于以下内容：</p>
<pre class="xmp">Type 'help' for help.
reading symbolic information ...warning: no source compiled with -g
 
[在核心中使用内存映像]
 
Segmentation fault in proc_d at 0x10000634
0x10000634 (???) 98640000        stb   r3,0x0(r4)
(dbx) </pre> 
<p>堆栈回溯可以用来确定程序是如何到达当前位置的，它如以下来生成：</p> 
<p></p>
<pre class="xmp">(dbx) </pre><p class="indatacontent"> 生成如下输出的位置：</p>
<pre class="xmp">proc_d(0x0) 在 0x10000634
proc_c(0x0) 在 0x10000604
proc_b(0x0) 在 0x100005d0
proc_a(0x0) 在 0x1000059c
main(0x2, 0x2ff7fba4) at 0x1000055c
(dbx) </pre></li>
<li><span class="bold">dbx</span> 子命令<span class="bold"> stepi </span> 也可以用作重新排序后的可执行程序的单步遍历指令，如下：
<p></p>
<pre class="xmp">(dbx) stepi</pre><p class="indatacontent"> 生成如下输出的位置：</p>
<pre class="xmp">stopped in proc_d at 0x1000061c
0x1000061c (???) 9421ffc0       stwu   r1,-64(r1)
(dbx) </pre><p class="indatacontent"> 在本示例中，<span class="bold">dbx</span> 表明例程 <tt>proc_d</tt> 中，程序在重新排序后的文本部分内的地址 <tt>0x1000061c</tt> 处停止。</p></li></ol>
<a name="wq1120"></a>
<h3 id="wq1120">具体实现</h3>
<p>软件产品 / 选项：<span class="italic"> AIX 性能助手 / 本地性能分析和控制命令</span>。</p>
<p>标准一致性：无。</p>
<a name="def54d2380jani"></a>
<h3 id="def54d2380jani">文件</h3>
<p></p>
<a name="wq1121"></a>
<table id="wq1121" width="100%" summary="" border="0" frame="void" rules="none">
<tbody valign="top">
<tr>
<td width="38%">
<a id="df71095585mart" name="df71095585mart"></a><span class="bold">/usr/bin/fdpr</span></td>
<td width="61%">包含<span class="bold"> fdpr </span> 命令。</td>
</tr>
<tr>
<td>
<a id="def54d2487jani" name="def54d2487jani"></a><span class="italic">program</span></td>
<td>要优化的完整的可执行程序名称。</td>
</tr>
<tr>
<td>
<a id="def54d2595jani" name="def54d2595jani"></a><span class="italic">program</span><span class="bold">.save</span></td>
<td>原始可执行程序保存后的版本。</td>
</tr>
<tr>
<td>
<a id="def54d2948jani" name="def54d2948jani"></a><span class="italic">program</span><span class="bold">.nprof</span></td>
<td>概要文件的名称。</td>
</tr>
<tr>
<td>
<a id="def54d3056jani" name="def54d3056jani"></a><span class="italic">program</span><span class="bold">.instr</span></td>
<td>程序检测版本的名称。</td>
</tr>
<tr>
<td>
<a id="def54d3163jani" name="def54d3163jani"></a><span class="italic">program</span><span class="bold">.fdpr</span></td>
<td>优化可执行输出文件的缺省名称。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.instr.dis_text</span></td>
<td>检测阶段后由 <span class="bold">-disasm</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.fdpr.dis_text</span></td>
<td>优化阶段后由 <span class="bold">-disasm</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.instr.dis_data</span></td>
<td> 检测阶段后由 <span class="bold">-disasm_data</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.fdpr.dis_data</span></td>
<td>优化阶段后由 <span class="bold">-disasm_data</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.instr.dis_bss</span></td>
<td>检测阶段后由 <span class="bold">-disasm_bss</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.fdpr.dis_bss</span></td>
<td>优化阶段后由 <span class="bold">-disasm_bss</span> 标志生成的 ASCII 格式的缺省反汇编文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.instr.mapper</span></td>
<td>检测阶段后由 <span class="bold">-map</span> 标志生成的 ASCII 格式的缺省映射文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.fdpr.mapper</span></td>
<td>优化阶段后由 <span class="bold">-map</span> 标志生成的 ASCII 格式的缺省映射文件。</td>
</tr>
<tr>
<td><span class="italic">program</span><span class="bold">.ncounts</span></td>
<td>由 <span class="bold">-profcount</span> 标志生成的 ASCII 格式的缺省概要表计数器文件。</td>
</tr>
</tbody>
</table>
<a name="def54d3249jani"></a>
<h3 id="def54d3249jani"> 相关信息</h3>
<a name="e761c22309mela"></a>
<p id="e761c22309mela"><a href="dbx.htm#a2699ee"><span class="bold">dbx</span></a> 命令。</p>
<p><span class="italic">《AIX 5L V5.2 性能管理指南》</span>中的<a href="http://study.chyangwa.com/IT/AIX/aixcmds2/aixbman/prftungd/cpuperf.htm">『用 fdpr 程序重构可执行程序』</a>。</p>
<p>xlC 编译器。</p>
<FONT COLOR="#A62A2A"></FONT><p></p>
   <center>
<B>[ <a href="fdpr.htm#Top_Of_Page">页的顶部</a> | <a href="fdformat.htm">上一页</a> | <a href="fencevsd.htm">下一页</a> | <a href="mastertoc.htm#mtoc">目录</a> | <a href="aixcmds202.htm#wq1815">索引</a> | <A HREF="file:///C|/download/www16.boulder.ibm.com/cgi-bin/ds_form@lang=zh_CN&viewset=AIX" TARGET="_top"><B>Library Home</B></A> |
<A HREF="notices.htm"><B>Legal</B></A> |
<A HREF="file:///C|/download/www16.boulder.ibm.com/cgi-bin/ds_form@lang=zh_CN&viewset=AIX" TARGET="_top"><B>Search</B></A> ]</B>
</center>

<a id="Bot_Of_Page" name="Bot_Of_Page"></a>
</body>
</html>
